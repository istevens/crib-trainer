:root {
    --tableColour: rgb(0, 200, 40);
    --tableDecorColour: hsl(60, 100%, 75%, 0.5);
    --titleColour: hsl(60, 100%, 75%, 0.75);
    --uiElementBorder: 0.2rem solid var(--tableDecorColour);
    --successColour: chartreuse;
    --failureColour: red;
    --dialogColour: hsl(43, 100%, 92%);
    --dialogDecorColour: hsl(43, 100%, 20%);
    --cardWidth: 5rem;
    --maxCardWidth: 12rem;
    --buttonWidth: 12rem;
    --svgTrianglesInactive: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -8 8 16"><polygon points="8,-1 4.5,-8 1,-1" fill="black"/><polygon points="4.5,8 1,1 8,1" fill="black"/></svg>');
    --svgTrianglesActive: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -8 8 16"><polygon points="8,-1 4.5,-8 1,-1" fill="rgba(255, 255, 130, 0.5)"/><polygon points="4.5,8 1,1 8,1" fill="rgba(255, 255, 130, 0.5)"/></svg>');
}

* {
    -webkit-user-select: none;
    user-select: none;
}

html, body {
    margin: 0;
    height: 100%;
    width: 100%;
    background: black;
}

dialog, ::backdrop, #cribtrainer {
    overflow: hidden;
    overscroll-behavior: none;
    touch-action: none;
}

dialog {
    background-color: var(--dialogColour);
    border: 1px solid black;
    max-width: 90%;
    padding: 1rem;
}

select {
    appearance: none;
    background-image: var(--svgTrianglesInactive);
    background-repeat: no-repeat;
    background-position: right 0.5em center;
    background-size: 0.5em;
    padding-right: 1.5em !important;
}

:is(:hover, :focus) {
    outline: none;
}

h1 {
    margin: 0.5rem 0.5rem 0 0.5rem;
}

h2 {
    font-weight: 700;
    text-align: center;
    margin: 0;
}

h1 a {
    display: block;
    aspect-ratio: 1310 / 403;
    max-width: 40rem;
    margin: auto;
    color: transparent;
    background: var(--titleColour);
    mask-image: url(img/cribtrainer-arched.svg);
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
}

card-set {
    pointer-events: none;
}

a {
    text-decoration: none;
    color: inherit;
    width: 100%;
}

p {
    font-size: 1.5rem;
}

li {
    list-style: none;
}

ul {
    padding-inline-start: 0;
    margin-inline-start: 0;
}

card-set::part(card) {
    width: var(--cardWidth);
    max-width: var(--maxCardWidth);
}

.stacked {
    display: flex;
    flex-direction: column;
    justify-items: center;
}

#cribtrainer {
    background: fixed radial-gradient(circle at 50% 10rem, var(--tableColour) 0%, rgb(0,120,24) 40%, rgb(0,0,0) 100%);
    height: 100%;
    width: 100%;
    font-family: Public Sans, sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
}

#table {
    max-width: 40rem;
    margin: 0 auto;
    margin-top: -4rem;
    height: 100%;
    width: 100%;
}

#table nav {
    gap: 1.5rem;
    place-items: center;
}

#table nav *, select {
    text-align: center;
    background-color: transparent;
    font-size: 2rem;
    color: var(--tableDecorColour);
    cursor: pointer;
}

#table nav * {
    width: var(--buttonWidth);
}

:is(#table nav *):hover {
    background-color: var(--tableDecorColour);
    color: black;
}

:is(#table nav *.primary):hover {
    color: var(--tableDecorColour);
    background-color: transparent;
}

#table .activeContent {
    place-items: center;
    height: 100%;
    width: 100%;
    justify-content: space-around;
}

#table>section:not(.activeContent) {
    display: none;
}

#start {
    max-width: 90%;
    margin: auto;
    font-size: 150%;
}

#play {
    --cardWidth: 35vw;
    position: relative;
}

#hand, #cutCard, #table nav *, select {
    padding: 0.5rem;
    border: var(--uiElementBorder);
}

#hand, #lastHand {
    grid-template-columns: repeat(3, minmax(1rem, 1fr)) 1fr;
    justify-items: left;
}

#hand {
    gap: 0.5rem;
    max-width: 85vw;
}

#hand, dialog, #cutCard, #table nav *, select {
    border-radius: 11.5px;
}

#table nav *.primary,
#cutCard {
    outline: var(--uiElementBorder);
    outline-offset: 0.3rem;
}

#table nav *.primary,
select {
    color: black;
    background-color: var(--tableDecorColour);
}

#score {
    display: flex;
    position: absolute;
    top: 1rem;
    right: 0.5rem;
    height: 3rem;
    width: 6rem;
    font-weight: 700;
}

#score span {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50%;
    height: 100%;
}

#score #successes {
    background-color: var(--successColour);
    color: black;
}

#score #failures {
    background-color: var(--failureColour);
    color: white;
}

#lastPlay, #trickList, #trickList li, #correctScore {
    display: contents;
}

#lastPlay {
    --cardWidth: 6rem;
}

#lastCutCard {
    justify-self: center;
}

dialog#scoring {
    --cardWidth: 5rem;
}

dialog#about {
    max-width: clamp(20rem, 90%, 30rem);
}

dialog li ul {
    position: relative;
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    place-items: center;
}

#exampleTricks, #tricksContainer {
    display: grid;
    align-items: center;
}

#exampleTricks {
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    max-width: 50rem;
}

#tricksContainer {
    grid-template-columns: 6rem minmax(var(--cardWidth), 2fr) minmax(calc(var(--cardWidth) + 2rem), 3fr);
    gap: 0rem 1rem;
}

#correctScore {
    font-size: 4rem;
}

#trickList .trickLabel {
    font-size: 3rem;
}

.trickLabel {
    position: relative;
    text-align: center;
    place-items: center;
    font-weight: 700;
}

.trickLabel::before {
    position: absolute;
    left: 0;
    font-size: 2rem;
    font-weight: 700;
}

#trickList li:first-child .trickLabel::before {
    content: '=';
}

#trickList li:not(:first-child) .trickLabel::before {
    content: '+';
}

#trickList li:only-child .trickScore {
    display: none;
}

#trickList li:only-child .trickLabel::before {
    content: '';
}

#trickList ul {
    grid-column: 2 / span 2;
    padding-left: 1.5rem;
}

#trickList li:first-child ul, #trickList li:first-child>span {
    padding-top: 1.25rem;
}

#trickList li:first-child:has(ul>li) ul::before {
    position: absolute;
    width: 50%;
    content: '';
    top: 0.5rem;
    border-width: 1px 0 0 0;
    border-image: radial-gradient(circle, var(--dialogDecorColour), 75%, rgba(0,0,0,0)) 1 0;
    border-style: solid;
}

.trickScore {
    line-height: 75%;
}

.trickDescription {
    width: 75%;
    font-size: 1rem;
}

#selectedScore {
    position: absolute;
    visibility: hidden;
    width: 100%;
    top: 20%;
    font-size: 24em;
    font-weight: 700;
    letter-spacing: -0.1em;
    text-indent: -0.1em;
    text-align: center;
    filter: blur(0);
    transition: filter 500ms ease-in;
}

#selectedScore.active {
    visibility: visible;
    filter: blur(0.25em);
}

#selectedScore.correct {
    color: var(--successColour);
}

#selectedScore.incorrect {
    color: var(--failureColour);
}

@media (hover: hover) {
    select:hover {
        color: var(--tableDecorColour);
        background-color: transparent;
        background-image: var(--svgTrianglesActive);
    }
}

@media (orientation: landscape) {
    #tricksContainer {
        max-width: 40rem;
    }

    #play nav {
        position: fixed;
        top: 1rem;
        left: 1rem;
    }

    #score {
        position: fixed;
        right: 1rem;
        top: 1rem;
    }
}

@media (orientation: landscape) and (hover: none) {
    #table {
        margin-top: 1rem;
        margin-left: 3rem;
        max-width: none;
    }

    #table .activeContent {
        flex-direction: row;
    }

    #play nav {
        left: 3rem;
    }
}

